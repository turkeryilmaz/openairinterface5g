SIDELINK_PRECONFIGURATION = (
  {
    # TDD ULDL CONFIG used for sidelink
    sl_dl_UL_TransmissionPeriodicity = 6;
    sl_nrofDownlinkSlots             = 6;
    sl_nrofDownlinkSymbols           = 0;
    sl_nrofUplinkSlots               = 4;
    sl_nrofUplinkSymbols             = 0;
    sl_csi_rs = (
      {
        symb_l0                    = 5;
        # csi_type 2 is not supported 38211, 8.4.1.5.3
        csi_Type                   = 1;
        sl_powerControlOffset      = 1;
        sl_powerControlOffsetSS    = 1;
        slot_Offset                = 0;
        slot_Periodicity           = 5;
        # Indicates if CSI Reporting is enabled in UNICAST. is 0-ENABLED, 1-DISABLED
        sl_CSI_Acquisition         = 0;
        sl_LatencyBoundCSI_Report  = 8;
      }
    );

    sl_AllowedResourceSelectionConfig = 3; // Supported only {0, 3, 4, 6}

    sl_FrequencyCommonConfig = (
      {
        sl_offstToCarrier                   = 0;
        sl_subcarrierSpacing                = 1;//0-15Khz, 1-30Khz
        sl_carrierBandwidth                 = 106;//numPRBs
#NR bands for Sidelink n47, n38. N47 - 5855Mhz - 5925Mhz
#SL SSB chosen to be located from RB10 to RB21. points to the middle of the SSB block.
#SSB location should be within Sidelink BWP
# this is 2584.95 MHz => 301 REs from PointA 25 PRBs + 1 RE
        sl_absoluteFrequencySSB             = 516990;
# this is 2575.92 MHz (center frequency is 2585.1 MHz
        sl_absoluteFrequencyPointA          = 515184;
      }
    );

    sl_BWP = (
      {
#RB start 0, RB size = 106. occupies complete Bw.
        sl_locationAndBandwidth             = 28875;
# Num Symbols used for Sidelink in an uplink slot
# Herein, sl_LengthSymbols represents an index; not the number of symbols.
# This index value can be from 0 to 7 representing the (7 to 14 symbols)
        sl_LengthSymbols                    = 7;
#Sidelink Starting symbol in a slot
#Value can be between symbols 0 to 7
        sl_StartSymbol                      = 0;
      }
    );

    sl_syncCfg = (
      {
#NUM SL-SSB within 16 frames
        sl_NumSSB_WithinPeriod_0            = 4;
#Slot Offset for the first txn in the 16 frame period
        sl_TimeOffsetSSB_0                  = 8;
#interval in slots for repetition of SL-SSB
        sl_TimeInterval_0                   = 120;
      }
    );

    sl_ConfiguredGrantConfig = (
      {
        sl_NrOfHARQ_Processes = 16;
        sl_HARQ_ProcID_offset = 0;
        sl_periodic_rsc_rsr_interval = 100;
      }
    );
    sl_RxResPools = (
      {
#Number of symbols which carry PSCCH.
#Possible values 0 means 2 symbols, 1 - means 3 symbols.
        sl_TimeResourcePSCCH            = 0;
#Number of RBS which carry PSCCH
#Possible values {n10,n12,n15,n20,n25}
        sl_FreqResourcePSCCH            = 1; //12RBs
#Size of subchannel in RBs
#Possible values - {n10,n12,n15,n20,n25,n50,n75,n100}
        sl_SubchannelSize               = 5;//10RBs
#start in RB of the lowest subchannel in a rpool
        sl_StartRB_Subchannel           = 0;
#number of PRBs in a rpool
        sl_RB_Number                    = 50;
        sl_NumSubchannel                = 1;
# period of PSFCH resource in units of slots within this resource pool
# Possible values sl0 means no PSFCH resource, {sl0, sl1, sl2, sl4}
        sl_PSFCH_Period                 = 2;
# Number of cyclic shift pairs used for a PSFCH transmission that can be multiplexed in a PRB
# Possible values {n1, n2, n3, n4}
        sl_NumMuxCS_Pair                = 1;
# Minimum time gap between PSFCH and the associated PSSCH in the unit of slots {sl2, sl3}
        sl_MinTimeGapPSFCH              = 1; //sl3
# Scrambling ID {0..1023} for sequence hopping of the PSFCH used in the resource pool
        sl_PSFCH_HopID                  = 1;
# Number of PSFCH resources available {startSubCH, allocSubCH} for multiplexing HARQ-ACK information in a PSFCH transmission
        sl_PSFCH_CandidateResourceType  = 0; // startSubCH
      }
    );

    sl_TxResPools = (
      {
#Number of symbols which carry PSCCH.
#Possible values 0 means 2 symbols, 1 - means 3 symbols.
        sl_TimeResourcePSCCH            = 0;
#Number of RBS which carry PSCCH
#Possible values {n10,n12,n15,n20,n25}
        sl_FreqResourcePSCCH            = 1; //12RBs
#Size of subchannel in RBs
#Possible values - {n10,n12,n15,n20,n25,n50,n75,n100}
        sl_SubchannelSize               = 5;//50RBs
#start in RB of the lowest subchannel in a rpool
        sl_StartRB_Subchannel           = 0;
#number of PRBs in a rpool
        sl_RB_Number                    = 50;
        sl_NumSubchannel                = 1;
# period of PSFCH resource in units of slots within this resource pool
# Possible values sl0 means no PSFCH resource, {sl0, sl1, sl2, sl4}
        sl_PSFCH_Period                 = 2;
# Number of cyclic shift pairs used for a PSFCH transmission that can be multiplexed in a PRB
# Possible values {n1, n2, n3, n4}
        sl_NumMuxCS_Pair                = 1;
# Minimum time gap between PSFCH and the associated PSSCH in the unit of slots {sl2, sl3}
        sl_MinTimeGapPSFCH              = 1; //sl3
# Scrambling ID {0..1023} for sequence hopping of the PSFCH used in the resource pool
        sl_PSFCH_HopID                  = 1;
# Number of PSFCH resources available {startSubCH, allocSubCH} for multiplexing HARQ-ACK information in a PSFCH transmission
        sl_PSFCH_CandidateResourceType  = 0; // startSubCH
      }
    );

    rsrc_selection_params = (
      {
        # Resource selection parameters
        sl_SelectionWindow              = 5; // n1, n5, n10, n20}
        sl_Thres_RSRP                   = 0; // (-128 + (n-1)*2) dBm n is 0..66
        sl_MaxNumPerReserve             = 0; // n2, n3
        sl_SensingWindow                = 100; // {ms100, ms1100}
        sl_ResourceReservePeriod        = 100; //{ms0, ms100, ms200, ms300, ms400, ms500, ms600, ms700, ms800, ms900, ms1000}
        sl_RS_ForSensing                = 0; // 0 pscch, 1 pssch
      }
    );
    sl_UEINFO = (
      {
        srcid = 0;
        thirdOctet = 0;
        fourthOctet = 1;
      }
    );
 }
);
